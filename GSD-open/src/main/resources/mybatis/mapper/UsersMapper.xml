<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoxing.gsd.modules.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.chaoxing.gsd.modules.entity.Users">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Created" jdbcType="TIMESTAMP" property="created" />
    <result column="Updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="Deleted" jdbcType="TIMESTAMP" property="deleted" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="Referfriend" jdbcType="INTEGER" property="referfriend" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Email, Name, Password, Created, Updated, Deleted, level, Referfriend
  </sql>
  <select id="selectByExample" parameterType="com.chaoxing.gsd.modules.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chaoxing.gsd.modules.entity.Users">
    insert into users (Id, Email, Name, 
      Password, Created, Updated, 
      Deleted, level, Referfriend
      )
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=TIMESTAMP}, #{level,jdbcType=INTEGER}, #{referfriend,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chaoxing.gsd.modules.entity.Users" 
   useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="created != null">
        Created,
      </if>
      <if test="updated != null">
        Updated,
      </if>
      <if test="deleted != null">
        Deleted,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="referfriend != null">
        Referfriend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password(#{password,jdbcType=VARCHAR}),
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TIMESTAMP},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="referfriend != null">
        #{referfriend,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="int" keyProperty="id" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
  <!-- 简单验证用户 -->
  <select id="checkUserInfo" parameterType="com.chaoxing.gsd.modules.entity.Users" resultType="com.chaoxing.gsd.modules.entity.Users">
    select t.* from users t 
    where t.Name = #{name} and t.Password = password(#{password})  
  </select>
  
  <select id="countByExample" parameterType="com.chaoxing.gsd.modules.entity.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.chaoxing.gsd.modules.entity.Users">
    update users
    <set>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        Created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        Updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        Deleted = #{deleted,jdbcType=TIMESTAMP},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="referfriend != null">
        Referfriend = #{referfriend,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chaoxing.gsd.modules.entity.Users">
    update users
    set Email = #{email,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Created = #{created,jdbcType=TIMESTAMP},
      Updated = #{updated,jdbcType=TIMESTAMP},
      Deleted = #{deleted,jdbcType=TIMESTAMP},
      level = #{level,jdbcType=INTEGER},
      Referfriend = #{referfriend,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>