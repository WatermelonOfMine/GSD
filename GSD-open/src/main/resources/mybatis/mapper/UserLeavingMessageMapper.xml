<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoxing.gsd.modules.mapper.UserLeavingMessageMapper">
  <resultMap id="BaseResultMap" type="com.chaoxing.gsd.modules.entity.UserLeavingMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="level" jdbcType="CHAR" property="level" />
    <result column="fromwhere" jdbcType="CHAR" property="fromwhere" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="ishandle" jdbcType="CHAR" property="ishandle" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, username, type, level, fromwhere, title, message, qq, email, ishandle, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_leaving_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_leaving_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chaoxing.gsd.modules.entity.UserLeavingMessage">
    insert into user_leaving_message (id, userid, username, 
      type, level, fromwhere, title, 
      message, qq, email, 
      ishandle, createtime)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{level,jdbcType=CHAR}, #{fromwhere,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{ishandle,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  
  <!-- 按条件插入数据 -->
  <insert id="insertSelective" parameterType="com.chaoxing.gsd.modules.entity.UserLeavingMessage">
    insert into user_leaving_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="fromwhere != null">
        fromwhere,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="ishandle != null">
        ishandle,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="fromwhere != null">
        #{fromwhere,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ishandle != null">
        #{ishandle,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chaoxing.gsd.modules.entity.UserLeavingMessage">
    update user_leaving_message
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=CHAR},
      </if>
      <if test="fromwhere != null">
        fromwhere = #{fromwhere,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ishandle != null">
        ishandle = #{ishandle,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chaoxing.gsd.modules.entity.UserLeavingMessage">
    update user_leaving_message
    set userid = #{userid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      fromwhere = #{fromwhere,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      ishandle = #{ishandle,jdbcType=CHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>